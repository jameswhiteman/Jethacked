<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveForce = 500
jumpForce = 700
flyForce = 600
dashForce = 2

maxMoveSpeed = 100
maxFlySpeed = 200
juiceMax = 800
juice = juiceMax
gamepad = true

phy_fixed_rotation = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>left = keyboard_check(vk_left) || keyboard_check(ord('A'))
right = keyboard_check(vk_right) || keyboard_check(ord('D'))
jump = keyboard_check(vk_up) || keyboard_check(ord('W')) || keyboard_check(vk_space) || joystick_check_button(0, 3)
dash = keyboard_check_pressed(ord('K'))
onGround = place_meeting(x, y + 1, block)
if gamepad
{
    if onGround
       physics_apply_impulse(phy_com_x, phy_com_y, joystick_xpos(0) * moveForce, 0)
    else if juice &gt; 0
    {
        physics_apply_force(phy_com_x, phy_com_y, joystick_xpos(0) * flyForce, 0)
        juice-=2
    }
}
if left
{
    if onGround &amp;&amp; phy_linear_velocity_x &gt; maxMoveSpeed * -1
        physics_apply_force(phy_com_x, phy_com_y, -moveForce, 0)
    else if !onGround &amp;&amp; phy_linear_velocity_x &gt; maxFlySpeed * -1
    {
        physics_apply_force(phy_com_x, phy_com_y, -flyForce, 0)
        juice--
    }
}
else if right &amp;&amp; phy_linear_velocity_x &lt; maxMoveSpeed
{
     if onGround &amp;&amp; phy_linear_velocity_x &lt; maxMoveSpeed
        physics_apply_force(phy_com_x, phy_com_y, moveForce, 0)
     else if !onGround &amp;&amp; phy_linear_velocity_x &lt; maxFlySpeed
     {
        physics_apply_force(phy_com_x, phy_com_y, flyForce, 0)
        juice--
     }
}
if jump
{
    if onGround &amp;&amp; phy_linear_velocity_y &gt; maxFlySpeed * -1
       physics_apply_force(phy_com_x, phy_com_y, 0, -jumpForce)
    else if juice &gt; 0
    {
        if phy_linear_velocity_y &gt; maxFlySpeed * -1
            physics_apply_force(phy_com_x, phy_com_y, 0, -flyForce)
        juice-=2
    }
}
if dash
{
    physics_apply_force(phy_com_x, phy_com_y, phy_linear_velocity_x * dashForce, phy_linear_velocity_y * dashForce);
}

if onGround
{
    juice = min(juiceMax, juice + 10)
}

juice = max(0, juice)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//invoke collisions
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(0, 0, string(juice))
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.200000002980232</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
